openapi: 3.0.0
info:
  version: 1.0.0
  title: Swagger Doctors & Patients - OpenAPI 
  license:
    name: MIT
tags:
  - name: doctors
    description: Doctors requests
  - name: patients
    description: Patients requests
  - name: appointments
    description: Appointments requests
paths:
  /doctors:
    get:
      summary: List all doctors
      operationId: listDoctors
      tags:
        - doctors
      responses:
        '200':
          description: A paged array of doctors
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/Doctors"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Add a new doctor
      operationId: createDoctor
      tags:
        - doctors
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Doctor'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Doctor'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          
  /doctors/{id}:
    get:
      summary: Get doctor by id
      operationId: showDoctorById
      tags:
        - doctors
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the doctor to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Doctors"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      summary: Replace doctor by id
      operationId: replaceDoctor
      tags:
        - doctors
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: doctor
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/Doctor'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Doctor'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      summary: Patch doctor by id
      operationId: patchDoctor
      tags:
        - doctors
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: name
          in: query
          required: false
          schema:
            type: string
        - name: specialization
          in: query
          required: false
          schema:
            type: string

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Doctor'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete doctor by id
      operationId: deleteDoctor
      tags:
        - doctors
      parameters:
        - name: id 
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Doctor'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /patients:
    get:
      summary: List all patients
      operationId: listPatients
      tags:
        - patients
      responses:
        '200':
          description: A paged array of patients
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/Patients"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Add a new patient
      operationId: createPatient
      tags:
        - patients
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Patient'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          
  /patients/{id}:
    get:
      summary: Get patient by id
      operationId: showPatientById
      tags:
        - patients
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the patient to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Patients"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      summary: Replace patient by id
      operationId: replacePatient
      tags:
        - patients
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: patient
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/Patient'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      summary: Patch patient by id
      operationId: patchPatient
      tags:
        - patients
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: name
          in: query
          required: false
          schema:
            type: string
        - name: diagnosis
          in: query
          required: false
          schema:
            type: string

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete patient by id
      operationId: deletePatient
      tags:
        - patients
      parameters:
        - name: id 
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /appointments:
    get:
      summary: List all appointments
      operationId: listAppointments
      tags:
        - appointments
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appointments'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Add new appointment
      operationId: addAppointment
      tags:
        - appointments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Appointment'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appointment'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /appointments/{id}:
    get:
      summary: Get appointment by id
      operationId: showAppointmentById
      tags:
        - appointments
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the appointment
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appointment'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Replace appointment by id
      operationId: replaceAppointment
      tags:
        - appointments
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: appointment
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/Appointment'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appointment'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      summary: Patch appointment by id
      operationId: patchAppointment
      tags:
        - appointments
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: doctor_id
          in: query
          required: false
          schema:
            type: integer
        - name: patient_id
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appointment'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete appointment by id
      operationId: deleteAppointment
      tags:
        - appointments
      parameters:
        - name: id 
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appointment'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
components:
  schemas:
    Doctor:
      type: object
      required:
        - id
        - name
        - specialization
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        specialization:
          type: string
    Doctors:
      type: array
      items:
        $ref: "#/components/schemas/Doctor"
    Patient:
      type: object
      required:
        - id
        - name
        - diagnosis
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        diagnosis:
          type: string
    Patients:
      type: array
      items:
        $ref: "#/components/schemas/Patient"
    Appointment:
      type: object
      required:
        - id
        - doctor_id
        - patient_id
      properties:
        id:
          type: integer
          format: int64
        doctor_id:
          type: integer
          format: int64
        patient_id:
          type: integer
          format: int64
    Appointments:
      type: array
      items:
        $ref: "#/components/schemas/Appointments"
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          $ref: '#/components/schemas/Code'
        message:
          type: string
        meta:
          type: object
    Code:
      type: string
      enum:
        - '200'
        - '201'
        - '401'
        - '403'
        - '404'
        - '400'
        - '500'